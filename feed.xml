<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom"><id>https://github.com/isvicy/gitblog</id><title>RSS feed of isvicy's gitblog</title><updated>2024-11-16T18:27:05.670179+00:00</updated><link href="https://github.com/isvicy/gitblog"/><link href="https://raw.githubusercontent.com/isvicy/gitblog/master/feed.xml" rel="self"/><generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator><entry><id>https://github.com/isvicy/gitblog/issues/1</id><title>设置 WSL 开机启动</title><updated>2024-11-16T18:27:05.914198+00:00</updated><content type="html"><![CDATA[<p>之所以有这个需求是因为有一台机器 （以下称作机器 A）作为我某一个内网（以下称作内网 A ）的入口，是以 tailscale 节点的形式加入到我的大内网的，并且注册了 sub route 到 tailscale 网络。基于此，如果我其他 tailscale 节点想要访问内网 A，在 sub route 覆盖范围内的 ip 的流量会自动被 tailscale 路由到机器 A，然后再路由到实际 ip 对应的服务器。</p>
<p>但当我访问部分内网 A 中机器托管的域名时，此时流量不会被 tailscale 自动代理，需要借助诸如  ssh 动态代理之类的方式，建立动态代理之后在终端或者浏览器中使用来访问对应域名。</p>
<p>由于机器 A 是 windows 系统，ssh server 是通过 WSL 启动的，所以为了保证 ssh 尽量任何时候都可以直连来建立动态代理，需要在 windows 自动更新或者异常重启之后，自动启动 WSL。</p>
<p>使用的启动脚本如下：</p>
<pre><code class="language-vbs">&#x27; Note: put this script in `C:\Users\&lt;username&gt;\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup`
Set ws = WScript.CreateObject(&quot;wscript.shell&quot;)

&#x27; Start WSL
ws.run &quot;wsl -d Ubuntu-24.04&quot;, 0

&#x27; Wait for a moment to ensure WSL has started
WScript.Sleep 5000  &#x27; Wait for 5 seconds, adjust as needed

&#x27; Create and execute PowerShell command using BurntToast
&#x27; Note: you need installed BurntToast before using this command.
&#x27; Do this before in you powershell with admin privilege: `Install-Module -Name BurntToast -Force`,
&#x27; and then test the installation with: `New-BurntToastNotification -Text &quot;Hello&quot;, &quot;This is a test notification&quot;`
ps_cmd = &quot;powershell -Command &quot;&quot;New-BurntToastNotification -Text &#x27;WSL Started&#x27;, &#x27;Ubuntu-24.04 has been started&#x27;&quot;&quot;&quot;
ws.run ps_cmd, 0
</code></pre>
<p>代码已经提供了注释，包括脚本放置的位置。 </p>
<p>最终实现的效果是 Windows 开机之后会自动执行此脚本，脚本启动 WSL 之后，会等待五秒钟，然后弹出一个 Windows 通知。</p>
]]></content><link href="https://github.com/isvicy/gitblog/issues/1"/><published>2024-11-16T08:41:30+00:00</published></entry></feed>